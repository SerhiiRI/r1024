 * Вітаю. Це малий рапорт по імплементація і заразом інструкція по запуску проекту.

 * Отож це імплементація тестової задачі. Щойно я завершив задачу та вирішивши її опублікувати побачив роз'їзд по тому що зробив й тому що вимагалося, адже заімплементував зворотній фільтр, що якраз показує відфільтровані повідомлення що йшли ДО моменту додачі фільтра(або композиту фільтрів), а не в зворотньому напрямку. Я опишу слівно в коді що було слід виправити для цього, щоб логіка працювала як в задачі. Втім приклад ен змінюватиму адже це час, котрого багато немаю, і волію зосередитися на докуменатації та поясненнях своїх дій.
 В додаток зрозумів, що над задачою можна посидіти й довше й краще й доопрацювати(без кінця та краю вилизуючи) від коду та інфраструктури. Всі ці коментарі та ідеї я додам в код, котрий Ви(пане/пані рев'ювер) будете читати.

 * Про час.
Єдина моя стичність з меседж брокерами була років 5-ть тому і це був Ребіт. Отож врахований час на задачу також включає час на вивчення технології з нуля.
- На поверхневий аналіз документації та розбирання з технологією пішло годин ~4 (неділя)
- Більшість часу забрало складання проекту й робота з кафкою та дурні помилки запуску та аналіз параметризації, конфіга - 4-5 годин(Пн-Вт, часу було вкрай мало)
- Написання кодової частини коду(Ср-Чт) 5-6-ть годин. В основному час забирали баги.
- Документація та вказівники в коді - 2-і години.
За власним відчуттям з повною відсутністю знань по даній області, свій результат оцінюю як задовільний(не суперовий), втім саму задачу достатньо великою та об'ємною з великою кількістю можливостей для оптималізації та архітектурної творчої свободи.

 * Інструкція.
 Більшість документації описана у файлі Makefile, і практика показує що так практичніше, коли щось "не робе" лізти туди де є рут всіх проблем. Приємного аналізу та читання.

 TLDR
 Втім доки по кожній команді(а також коментарі автора) варто почитати прямо в файлику Makefile.
 
 1. Клонуємо проєкт
    git clone https://github.com/SerhiiRI/r1024.git
 
 2. Таргет що стягує контейнер з кафкою та інсталить депи на проект
    make install
 
 3. Піднімає інфраструктуру з одним контейнером, творить один топік "books" та запускає серверок.
    make up
 
 4. Запускає тестовий сценарій що повинен показати як вся логіка працює в живу.
    make test

 5. Після завершення роботи коли вся ця річ вже не здалася робимо чистку
    Гасимо контейнер з кафкою
    make down
    
    Видаляємо імедж
    make docker/images/rm
